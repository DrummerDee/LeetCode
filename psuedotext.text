target = 9
nums = [2, 1, 3, 7, 19]
// this returns the value
const twoSum = (nums, target) => {
    let hash = {}; //storage for reference 
    for (let i = 0; i < nums.length; i++) {
        if (hash[target - nums[i]]) {
            return [target-nums[i],nums[i]]
        } else {
            hash[nums[i]] = true //creating object here 
        }

    }
} // {2 : true, 1:true, 3: true} 


this problem will return the numbers but not the index


var twoSum = function(nums, target) {
    let hash = {};
    for (let i=0; i<nums.length; i++) {
        if(hash[nums[i]] === undefined) {
            hash[target-nums[i]] = i;
        }else{
            return [hash[nums[i]],i]
        }
    }
}


let arr = ['{', '(', '[', '[', ')', '}']

// check to see if open and close together (a match)

let newArr = []
for (let i = 0 ; i < arr.length ; i ++){
    if ( arr[i] == '(' || arr[i] == '{' || arr[i] == '['  ) { // newArr = [{, (, [, ]
        newArr.push(arr[i])
    }else (arr[i] == ')' || arr[i] == '}' || arr[i] == ')')
        if (arr[i] == ')')
    
}